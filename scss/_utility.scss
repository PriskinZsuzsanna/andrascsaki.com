@use "sass:string";


//margin-paddings
$base-size: 1rem;


$sizes: (
    "size-1": $base-size * 0.25,
    "size-2": $base-size * 0.5,
    "size-3": $base-size * 0.75,
    "size-4": $base-size * 1,
    "size-5": $base-size * 1.5,
    "size-6": $base-size * 2,
    "size-7": $base-size * 2.5,
    "size-8": $base-size * 3,
);

@each $size-number, $size-value in $sizes {
    $number: string.slice($size-number, 6); //slice in css starts with 1

    .px-#{$number} {
        padding-inline: $size-value
    }
    .py-#{$number} {
        padding-block: $size-value
    }
    .mx-#{$number} {
        margin-inline: $size-value
    }
    .my-#{$number} {
        margin-block: $size-value
    }
}

//border-radius

$border-radius : (
    "sm": $base-size * 0.5,
    "md": $base-size * 1,
    "lg": $base-size * 3,
    "circle": 50%
);

@each $size, $value in $border-radius {
    .b-radius-#{$size} {
        border-radius: $value;
    }
};


//font-size: should use in body with media query
$font-sizes: (
    "sm" : $base-size * 0.8,
    "md": $base-size * 1,
    "lg": $base-size * 1.25
);

@each $size, $value in $font-sizes {
    .font-#{$size} {
        font-size: $value;
    }
}



